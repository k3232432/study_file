### network 11/22 2일차

# tcp/ip 모델(미국, 국방부)
- apple
- 노벨
- apollo
- decent
- 등등

# app 계층(7,6,5)
- http, -ftp -telnet
transport 계층(4)
- TCP, UDP
NW 계층(3)
- IPv4, IPv6
DL 계층(2)
- 이더넷, PPP
Physical 계층(1)
- cable, signal 등등

# 네트워크 구성 중요 요소
1. 비용
2. 가용성
3. 속도
4. 보안
5. 관리 용이성

# Traffic
- user
- Background(Overhand) : Protocol 10% 를 넘지 않게 끔 해야함

# 스위치가 스위칭 테이블 만드는 방법

SW(Fa0/1)-------------------------------PC(mac:1111.1111.abcd)
                                     <-packet (2계층(3계층(4계층{메세지})))

스위치에서는 메세지를 볼 수 없다. 
*2계층 장비이기 때문에

2계층 들어가는 정보 (출발지 mac, 도착지 mac)

Fa0/1 번에 mac주소가 생성이됨. Fa0/1 <- 1111.1111.abcd

Routing Table 만들때는 사람이 만들어줘야 하는데
Switching Talbe 만들때는 자동으로 만들어짐
Switch table 보는 명령어 : show mac-address-table

# 플러딩
플러딩이란 : 모든 포트로 다 내보내는것 
swiching table 을 만들었을 때, 목적지 주소가 없으면 연결된 모든 포트로
패킷을 내보낸다.
만약 pc(7계층) 장비로 오게 되면 NIC(Lan카드)[2계층장비]가 목적지 주소를보고
제대로 왔으면 스위칭을 통해 cpu로 가고, cpu에서 목적지 주소를 확인한다.
but 목적지가 본인이 아니면 버린다.

# 포트
mac주소는 port 마다 가지고 있다.


3계층 ~ 7계층은 지구범위 이며, 1~2계층은 NW내부에서 동작한다.

# 계층에 따른 라우터와 스위치
라우터 3계층 : 라우팅
라우터 2계층 : 옷갈아 입히기
라우터 1계층 : 증폭

스위치 2계층 : 스위칭, 플러딩
스위치 1계층 : 증폭

스위치는 mac주소를 볼때, 같은 네트워크 내에서의 스위칭 작동을 한다.
ex ) 6666.6666.abcd ---------------5555.5555.abcd------------4444.4444.abcd-----------1111.1111.abcd
1111.1111.abcd로 갈때 스위치는 같은 내트워크 주소를 보고 보낸다.
(이해가 잘 안되서 다시 작성 必)

# www.naver.com 으로 packet 전송할 때
http 를 사용해서 보냄
- Client -> Server Request : Get(download), Post(upload)
(Get : 파일의 제목을 나른다. )
(Post: )
- Server -> Client Response : 200(성공), 300(이동), 400(Client 잘못), 500(Server잘못) 번대로 날아간다.

APP 계층(7~5)
1. Message 를 만듬
2. 코딩 : Message 를 이진수로 변환

Transport 계층(4)
1. 프로토콜 결정
- TCP(공유)
자른다 -------,---------,----------
네트워크를 공유한다.
a가 보낼때 b도 보내고 c도 보낼수 있는데
ex) a-----,b-----,c----,a------,b-----,c-----
- UDP(독립)
안자른다 -------------------------
네트워크를 독점한다.
a가 다 보내기전 까지는 c와 b는 보낼수 없다.
ex)a---------------------------b-------------------------

# TCP/UDP 차이
구분 |       TCP       |         UDP
-----------------------------------------
MSG  |       길다      |         짧다
길이 |  http,smtp,ftp  |   dhcp,snmp,syslog
------------------------------------------
거리 |       멀다      |         짧다
     |   http,smtp,ftp |    dhcp,snmp,syslog
-------------------------------------------
실시간|     비실시간    |        비실시간
     |  http,smtp,ftp  |         VoIP
--------------------------------------------
유니   |  유니캐스트만  |     유니/멀티/브로드
멀티   |_______________|______________________
브로드 |http,ftp,smtp등 | 멀티/브로드캐스팅
캐스트 |APP계층 프로토콜 | APP계층 프로토콜

※ 유니 캐스트 : 단일
※ 멀티 캐스트 : 그룹
※ 브로드 캐스트 : 전체

## TCP
TCP는 패킷을 자르기 때문에 순서가 필요함
1. Sequence Number가 있음.
자르는 유형 : TCP, IP 만자름
2. DST/SRC PORT 가 있음
(TYPE(POROTOCOL NUM(DST PORT------
3. Flag , SYN, FIN, ACK 등등(3-way hand shake)

도착 할 때
2계층에서 type 먼저보고 1. ipv4 인지 ipv6인지
3계층에서 protocol 본다. tcp인지 udp인지
4계층에서 Destination port를 본다. http 인지, ftp인지, telnet 인지
한 후에 APP 계층으로 보내서 msg를 본다.

# source
source port 의 역활
통신 세션을 구별하고(통신 창을 구별한다.)
동시에 사용하기 위해서 사용됨
(동일한 목적지에 동시에 여러가지 서비스를 이용하기 위해)

Source port 는 (1024~65535번 포트까지 랜덤으로 결정됨)
naver 뉴스, naver 날씨, naver 블로그 를 동시에 열때
1. naver뉴스 를 클릭 했을 때
- Get 80번포트, 출발지 포트 2만번 으로 나가고
- 200번 출발지 2만번, 80번 포트로 들어온다.
2. naver 날씨를 클릭 했을때
- Get 80번 포트, 출발지 포트(source) 4만번으로 나가고
- 200번 출발지 4만번, 80번 포트로 들어온다.

# Flag필드(3way-handshake)

connetion-oriented protocol(TCP,PPP)
- 헛걸음을 안한다. (기존에 있는지 확인 절차를 하기 때문에 밑에 정리해노음)
connetionless
- 헛걸음을 할 수 도 있다.
naver 서버에 초기 요청을 보냄 
TCP SYN(DES =80) 보냄
그러면 server 에서 하는일은
1. 80번 포트를 운행하고 있는지 확인하고
2. Memory 를 확인한다. (Buffer)[메모리가 없으면 통신이 안됨]

ex) 식당에 3만명의 인원이 가려고 하는데
1. 전화해서 80번 음식 제공하는지 질문
2. 3만명 자리가 있는지 확인
3. 3천명씩 보내세요 하면 3천명씩 나눠서 보냄


# Urgent point(URG) = 1 => Urgent point
urgent point 500 이면
500번째 byte 를 먼저 처리해라.


# TCP
controll - 에러 : Ack number
         - 플로 : window
sequence 를 보내고 ack를 받는 시간 : 왕복시간
ex) 200ms 가 나오는 왕복시간의 재전송타임 : 200 * 2 = 400 (대략)
ack가 안왔을 때 왕복시간 동안 기다리고, 성공할 때 까지 재전송함.

이런 프로토콜을 Reliable protocol = tcp
이렇지 않은 프로토콜 은 UnReliable Protocol = udp 등등


# 정리
1. Segment
2. DST/SRC
3. Flag SYN ACK
4. CTRL 

# Bottle lack = congestion = Queue Drop
- 라우터나 스위치에 대역폭이 가득차 있고, 메모리 용량도 다 찼을경우 데이터를 버리는 현상
고로 TCP를 사용한다.
TCP = Delay
UDP = Loss

UDP 사용 이유 
- 거리가 짧거나
- congestion이 일어나지 않는 곳

TCP 사용 이유
- 거리가 멀거나
- congestion이 일어날수 있는 곳

# check sum fild
check sum 함수에는 data가 들어간다.
Date를 32비트 단위로 짤라서 더한다. 
그러면 값이 나오고 그것을 보낸다. (naver등으로)
그러면 naver에서는 똑같이 check sum 해서
값이 동일한지 확인한다. 만약 값이 다르다면 통신 중 문제가 발생 했다는 것이고
데이터를 버리고 client 에서 재전송을 해준다.
$$ ipv6은 가지고 있지 않음
$$ delay의 주범 , ipv6는 2계층과 3계층이 해주기 때문에 필요 없다고 판단.


##  UDP
UDP 구성
1) DST/SRC port
2) 길이
3) check sum
-8바이트 밖에 되지 않음(해드길이)
-제공하는 기능이 없음

장점
속도가 빠르다.
짧다
제약이 없다.

# MTU
max transmission unit
1500 byte 씩 끊어 읽는다.
조립은 Server 가 한다.
0~1499             1500~3000           3000~4499
(--------------(-------------------(-------------------
ID       1              1                   1
FO       0            1500                 3000

# DF 
Don't Fregument = 1 자르지 말라는 뜻

# MF
More Fregument = 1 아직 다 읽지 못했다는 뜻
More Fregument = 0 다 읽었다는 뜻

# 3계층 
1. ID , FO
2. portocol(6TCP,17UDP)
3. DST/SRC ip
4. ToS(Type of Service) -> QoS(Quality of service) = 세치기 서비스
5. TTL (Time To Live)
6. 버전(4[ipv4])
TTL 이 기본적으로 126 이 고정인데 TTL 이 0이 되는순간 라우터가 버림
라우팅 테이블이 잘못 짜져있을 경우 Routin Loop 이 걸릴 수 있음(삭제되지 않고 계속 튕기면서 핑퐁 하는 것)


#
DNS(Domain Name Service)
DNS 서버 는 7계층 과 3계층의 매핑을 해줌
DNS query 는 7계층 DNS Answer 은 3계층

# 2계층

1. type(ipv4,ipv6)
2. FCS(check sum fild)
3. surce/destination mac 주소

7계층 -> 3계층 = DNS 서버가 해줌
3계층 -> 2계층 = ARP(Address Resolution Protocol)

# ARP (Addresss Resolution Protocol)
ARP 가 가장 중요함 
swich 가 arp request 하고 router 가 arp respond 를 해서 mac주소인 2계층을 통과함
(((----- 2계층 과 3계층은 ARP 를 가지고 왔다 갔다 함

arp routing table 보는 법 (pc) arp -a

# 기본 transaction
1. ARP request/reply(ARP테이블이 없으면 계속 목격)
2. DNS Query(7계층)/Answer(3계층)
3. TCP 3-way handshake
4. HTTP get/200


<------------------------------------------------->
<------------------------------------------------->
<------------------------------------------------->
<------------------------------------------------->

### 실습
p131 page 의 실습 예제
Switch 3개, router 2개, server 2개, pc 1대

ip 설정 10.대역으로 /24
그 후에 pc의 dns server 에 dns server ip 넣어준 후에
dns server 에 service -> dns-> on -> dns 넣어주고, 해당 ip넣어주고 add 클릭
web-server 에 service -> http -> 마음대로 설정 -> exit
그후에 routing table 작성 (router eigrp 100, network 10.0.0.0)
한 뒤에 pc에 들어가서 web들어가서 dns 서버 연결 되었는지 확인 (dns 넣어서 맞는 화면 나오는지 확인)

그리고 오른쪽 아래에 시계같은 게 있는데 그거 클릭하면 simulation 으로 바뀜
바꾼후에 select none 선택하고 edit filter 에서 dns, arp, http, tcp 선택)
하고 play하면 그 과정이 보임
과정중에 편지 모양 icon보면 그 패킷의 구성을 볼 수 있음
ex) arp request / reply
    dns query /dns answer 
    tcp syn / syn + ack / ack
    http get / http 200 ok /
    등을 볼 수 있음

----------------------------------------------------------------
## DHCP 서버
ip자동 할 당 서버  <----------pc
DG = 10.1.3.1            Discover
SM = 255.255.255.0
DNS = 10.1.2.2 -------> Offer
IP = 10.1.3.3 <----------Request or decline
     10.1.3.4 ----------> ACK
     10.1.3.5
     .
     .
     .
즉 DORA 이다. 

# 주의 
subnet mask 틀리면안됨 = 같은 네트워크라고 생각하기 때문에 router로 안감
default gateway 설정안하면 외부 네트워크와 통신이 안됨


<-------------------------------------------------->
dhcp 연습
server 1대놓고 ip 할당 한 후에 service 에 
dhcp 설정 에서 on 해주고 gate way 설정 
start ip 설정 해주고
dns ip 넣어주고
다 작성 한 다음 save 클릭
pc 한대 추가해서 dhcp 로 설정해주면 ip 받아옴

wireless 에 서 맨 왼쪽에 있는 access point -pa 선택
smart phone 선택 해서 연결해보고 www.naver.com 해서 들어가 보기


wireless 에 들억가서 config 들어간 후에 ssid 에 이름 설정
wpa~~ 제일긴거 선택한 다음 비밀 번호 설정

후에 smartphone 들어가서 config 에 wireless 들어간 후에 
wifi name, password 입력하면 접속 가능

----------------------------------------------------------
# accesspoint
access point 에서 key 를 사용하는데
1. symetric key (속도가 더 좋음)
2. asymetric key (보안강도 가 더 좋음)
2-1 사설키 
2-2 공개키 

smart phone 에서 access request 를 줌 -> access point 가 공개 키를 줌
1234567890 이라는 비밀번호를  공개 키를 이용해서 암호화해서 accesspoint로 보냄
이때 symetric key도 보냄 이때 accesspoint 는 사설키로 복호화를 함 그럼
1234567890 을 받고 symetric key도 받음 
그 후에 dhcp 의 dora 를 하는데 이 과정에서 symetric key로 암호화 해서
보냄

# 무선 랜 과정
1. 무선랜 인증 (key)
2. dhcp dora
3. dns
4. tcp 3-way handshake
5. http get / 200 ok

-------------------------------------------
### 지금까지 배운거
Topology, bandwidth , 장치(switch/router), tcp/ip
### 솔루션
1. vlan
2. stp
3. 이더 채널
4. fhrp
5. l3 스위치

### vlan
장소 에 상관 없이 B.D 분할 하고 싶을때
1. 같은 장소 다른 BD
2. 다른장소 같은 BD
이유 = 보안상

그래서 switch를 이용해서 나눌 수 있는데
비용이 많이 발 생함
이점을 이용해서 vlan(스위치를 가상으로 2개로 쪼개는 시스템)
이 나오게 됨
그러면 많은 비용없이 BD 를 분할 할 수 있음

---------------------------------------------
# vlan
switch에 들어가서 해야함
1) 선언
(config)# vlan 10
(config-vlan)# vlan 20
2) 액세스 포트
int fa 0/1 
switch port access vlan 10
int fa 0/4
switchport access vlan 20
.
.
.
. 포트마다 설정을 해줘야함

-----------------------------------------------
L3 스위치 - router 와 switch 합쳐놓은것
switch 와 L3 연결 -> trunk 로 한개의 선으로 연결
한개면 어떻게 구별하냐 -> layer 을 1개를 더 입힘
ex) (vlan layer(1계층(2계층(3계층------------

(vlan10번(mac주소(ip주소------------------
   |- 트렁크가 하는 일
(vlan10번(mac주소(ip주소-------------------

